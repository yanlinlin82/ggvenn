[{"path":"https://yanlinlin82.github.io/ggvenn/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Linlin Yan. Author, maintainer.","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yan L (2025). ggvenn: Draw Venn Diagram 'ggplot2'. R package version 0.1.18, https://yanlinlin82.github.io/ggvenn/.","code":"@Manual{,   title = {ggvenn: Draw Venn Diagram by 'ggplot2'},   author = {Linlin Yan},   year = {2025},   note = {R package version 0.1.18},   url = {https://yanlinlin82.github.io/ggvenn/}, }"},{"path":"https://yanlinlin82.github.io/ggvenn/index.html","id":"ggvenn","dir":"","previous_headings":"","what":"Draw Venn Diagram by ggplot2","title":"Draw Venn Diagram by ggplot2","text":"Venn Diagram ggplot2, really easy--use API.","code":""},{"path":[]},{"path":"https://yanlinlin82.github.io/ggvenn/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Draw Venn Diagram by ggplot2","text":"{r} install.packages(\"ggvenn\") # install via CRAN {r} (!require(devtools)) install.packages(\"devtools\") devtools::install_github(\"yanlinlin82/ggvenn\") # install via GitHub (latest version)","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Draw Venn Diagram by ggplot2","text":"package supports list data.frame type data input. list data (element set): ```{r} library(ggvenn) <- list(Set 1 = c(1, 3, 5, 7, 9), Set 2 = c(1, 5, 9, 13), Set 3 = c(1, 2, 8, 9), Set 4 = c(6, 7, 10, 12)) ggvenn(, c(“Set 1”, “Set 2”)) # draw two-set venn ggvenn(, c(“Set 1”, “Set 2”, “Set 3”)) # draw three-set venn ggvenn() # without set names, first 4 elements list chose draw four-set venn data.frame data, also another way plot ggplot grammar: ``{r} # draw two-set venn (use , B aes) ggplot(d, aes(=Set 1, B =Set 2`)) + geom_venn() + theme_void() + coord_fixed()","code":"For `data.frame` data (each logical column is a set):  ```{r} d <- dplyr::tibble(value   = c(1,     2,     3,     5,     6,     7,     8,     9),             `Set 1` = c(TRUE,  FALSE, TRUE,  TRUE,  FALSE, TRUE,  FALSE, TRUE),             `Set 2` = c(TRUE,  FALSE, FALSE, TRUE,  FALSE, FALSE, FALSE, TRUE),             `Set 3` = c(TRUE,  TRUE,  FALSE, FALSE, FALSE, FALSE, TRUE,  TRUE),             `Set 4` = c(FALSE, FALSE, FALSE, FALSE, TRUE,  TRUE,  FALSE, FALSE)) ggvenn(d, c(\"Set 1\", \"Set 2\"))           # draw two-set venn ggvenn(d, c(\"Set 1\", \"Set 2\", \"Set 3\"))  # draw three-set venn ggvenn(d)   # without set names, the first 4 logical column in data.frame will be chose to draw four-set venn"},{"path":"https://yanlinlin82.github.io/ggvenn/index.html","id":"draw-three-set-venn-use-a-b-c-in-aes","dir":"","previous_headings":"","what":"draw three-set venn (use A, B, C in aes)","title":"Draw Venn Diagram by ggplot2","text":"ggplot(d, aes(= Set 1, B = Set 2, C = Set 3)) + geom_venn() + theme_void() + coord_fixed()","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/index.html","id":"draw-four-set-venn-use-a-b-c-d-in-aes","dir":"","previous_headings":"","what":"draw four-set venn (use A, B, C, D in aes)","title":"Draw Venn Diagram by ggplot2","text":"ggplot(d, aes(= Set 1, B = Set 2, C = Set 3, D = Set 4)) + geom_venn() + theme_void() + coord_fixed()","code":"## More Options  There are more options for customizing the venn diagram.  1. Tune the color and size      For filling:      * `fill_color` - default is c(\"blue\", \"yellow\", \"green\", \"red\")     * `fill_alpha` - default is 0.5      For stroke:      * `stroke_color` - default is \"black\"     * `stroke_alpha` - default is 1     * `stroke_size` - default is 1     * `stroke_linetype` - default is \"solid\"      For set name:      * `set_name_color` - default is \"black\"     * `set_name_size` - default is 6      For text:      * `text_color` - default is \"black\"     * `text_size` - default is 4      All parameters above could be used in both `ggvenn()` and `geom_venn()`.      For example:      ```{r}     a <- list(A = 1:4, B = c(1,3,5))     ggvenn(a, stroke_linetype = 2, stroke_size = 0.5,       set_name_color = \"red\", set_name_size = 15,       fill_color = c(\"pink\", \"gold\"))     ```  2. Show elements      * `show_elements` - default is FALSE     * `label_sep` - text used to concatenate elements, default is \",\"      For example:      ```{r}     a <- list(A = c(\"apple\", \"pear\", \"peach\"),               B = c(\"apple\", \"lemon\"))     ggvenn(a, show_elements = TRUE)      ggvenn(a, show_elements = TRUE, label_sep = \"\\n\")  # show elements in line     ```  3. Hide percentage      * `show_percentage` - default is TRUE      For example:      ```{r}     a <- list(A = 1:5, B = 1:2)     ggvenn(a, show_percentage = FALSE)     ```  4. Change digits of percentage      * `digits` - default is 1      For example:      ```{r}     a <- list(A = 1:5, B = 1:2)     ggvenn(a, digits = 2)     ```  ## Data Format  The `ggvenn` support two types of input data: list and data.frame. Two functions (`data_frame_to_list()` and `list_to_data_frame()`) can convert data between the two types.  ```r a <- list(A = 1:5, B = 4:6) d <- dplyr::tibble(key = 1:6,             A = c(rep(TRUE, 5), FALSE),             B = rep(c(FALSE, TRUE), each = 3))  identical(a, data_frame_to_list(d))  # TRUE identical(d, list_to_data_frame(a))  # TRUE"},{"path":"https://yanlinlin82.github.io/ggvenn/reference/data_preparation.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility functions for data type conversion between data.frame and list. — data_preparation","title":"Utility functions for data type conversion between data.frame and list. — data_preparation","text":"Utility functions data type conversion data.frame list.","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/data_preparation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility functions for data type conversion between data.frame and list. — data_preparation","text":"","code":"data_frame_to_list(x)  list_to_data_frame(x)"},{"path":"https://yanlinlin82.github.io/ggvenn/reference/data_preparation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility functions for data type conversion between data.frame and list. — data_preparation","text":"x data.frame logical columns representing sets, list sets.","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/data_preparation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility functions for data type conversion between data.frame and list. — data_preparation","text":"list sets data.frame logical columns representing sets.","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/data_preparation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility functions for data type conversion between data.frame and list. — data_preparation","text":"","code":"# Convert data.frame to list d <- dplyr::tibble(name = 1:6,             A = c(rep(TRUE, 5), FALSE),             B = rep(c(FALSE, TRUE), each = 3)) print(d) #> # A tibble: 6 × 3 #>    name A     B     #>   <int> <lgl> <lgl> #> 1     1 TRUE  FALSE #> 2     2 TRUE  FALSE #> 3     3 TRUE  FALSE #> 4     4 TRUE  TRUE  #> 5     5 TRUE  TRUE  #> 6     6 FALSE TRUE  data_frame_to_list(d) #> $A #> [1] 1 2 3 4 5 #>  #> $B #> [1] 4 5 6 #>   # Convert list to data.frame a <- list(A = 1:5, B = 4:6) print(a) #> $A #> [1] 1 2 3 4 5 #>  #> $B #> [1] 4 5 6 #>  list_to_data_frame(a) #> # A tibble: 6 × 3 #>   `_key` A     B     #>    <int> <lgl> <lgl> #> 1      1 TRUE  FALSE #> 2      2 TRUE  FALSE #> 3      3 TRUE  FALSE #> 4      4 TRUE  TRUE  #> 5      5 TRUE  TRUE  #> 6      6 FALSE TRUE   # Round-trip conversion identical(a, data_frame_to_list(list_to_data_frame(a)))  # TRUE #> [1] TRUE identical(d, list_to_data_frame(data_frame_to_list(d)))  # TRUE #> [1] FALSE"},{"path":"https://yanlinlin82.github.io/ggvenn/reference/geom_venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot venn diagram as a ggplot layer object. It supports only data frame as input. — geom_venn","title":"Plot venn diagram as a ggplot layer object. It supports only data frame as input. — geom_venn","text":"Plot venn diagram ggplot layer object. supports data frame input.","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/geom_venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot venn diagram as a ggplot layer object. It supports only data frame as input. — geom_venn","text":"","code":"geom_venn(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   set_names = NULL,   element_column = NULL,   show_elements = FALSE,   show_set_totals = \"none\",   show_stats = c(\"cp\", \"c\", \"p\"),   show_counts = TRUE,   show_percentage = TRUE,   digits = 1,   label_sep = \",\",   count_column = NULL,   show_outside = c(\"auto\", \"none\", \"always\"),   auto_scale = FALSE,   fill_color = default_color_list,   fill_alpha = 0.5,   stroke_color = \"black\",   stroke_alpha = 1,   stroke_size = 1,   stroke_linetype = \"solid\",   set_name_color = \"black\",   set_name_size = 6,   text_color = \"black\",   text_size = 4,   comma_sep = FALSE,   padding = 1,   max_elements = 6,   text_truncate = TRUE )"},{"path":"https://yanlinlin82.github.io/ggvenn/reference/geom_venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot venn diagram as a ggplot layer object. It supports only data frame as input. — geom_venn","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data.frame list input data. stat statistical transformation use data layer, string. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. set_names Set names, use column names omitted. element_column single character value use column name select elements. show_elements Show set elements instead count/percentage. show_set_totals Show total count (c) /percentage (p) set. Pass string like \"cp\" show . string like \"none\" hide . show_stats Show count (c) /percentage (p) set. Pass string like \"cp\" show . show_counts Show count set. show_percentage Show percentage set. digits desired number digits decimal point. label_sep Separator character displaying elements. count_column Specify column element repeat count. show_outside Show outside elements (belongs set). Options: \"auto\", \"none\", \"always\". auto_scale Allow automatically resizing circles according element counts (2-set diagrams). fill_color Filling colors circles. Can single color vector colors set. fill_alpha Transparency filling circles. Can single value vector set. stroke_color Stroke color drawing circles. Can single color vector colors set. stroke_alpha Transparency drawing circles. Can single value vector set. stroke_size Stroke size drawing circles. Can single value vector set. stroke_linetype Line type drawing circles. Can single value vector set. set_name_color Text color set names. set_name_size Text size set names. text_color Text color intersect contents. text_size Text size intersect contents. comma_sep Whether use comma separator displaying numbers. padding Padding plot. Change allow longer labels displayed. max_elements Maximum number elements display show_elements=TRUE. text_truncate Whether truncate text elements exceed max_elements.","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/geom_venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot venn diagram as a ggplot layer object. It supports only data frame as input. — geom_venn","text":"ggplot layer object add ggplot.","code":""},{"path":[]},{"path":"https://yanlinlin82.github.io/ggvenn/reference/geom_venn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot venn diagram as a ggplot layer object. It supports only data frame as input. — geom_venn","text":"","code":"library(ggvenn)  # use data.frame as input d <- dplyr::tibble(   value   = c(1,     2,     3,     5,     6,     7,     8,     9),   `Set 1` = c(TRUE,  FALSE, TRUE,  TRUE,  FALSE, TRUE,  FALSE, TRUE),   `Set 2` = c(TRUE,  FALSE, FALSE, TRUE,  FALSE, FALSE, FALSE, TRUE),   `Set 3` = c(TRUE,  TRUE,  FALSE, FALSE, FALSE, FALSE, TRUE,  TRUE),   `Set 4` = c(FALSE, FALSE, FALSE, FALSE, TRUE,  TRUE,  FALSE, FALSE) )  # ggplot gramma ggplot(d) +   geom_venn(aes(A = `Set 1`, B = `Set 2`)) +   coord_fixed() +   theme_void()  ggplot(d) +   geom_venn(aes(A = `Set 1`, B = `Set 2`, C = `Set 3`)) +   coord_fixed() + theme_void()  ggplot(d) +   geom_venn(aes(A = `Set 1`, B = `Set 2`, C = `Set 3`, D = `Set 4`)) +   coord_fixed() +   theme_void()   # set fill color ggplot(d) +   geom_venn(aes(A = `Set 1`, B = `Set 2`), fill_color = c(\"red\", \"blue\")) +   coord_fixed() +   theme_void()   # hide percentage ggplot(d) +   geom_venn(aes(A = `Set 1`, B = `Set 2`), show_stats = \"c\") +   coord_fixed() +   theme_void()   # change precision of percentages ggplot(d) +   geom_venn(aes(A = `Set 1`, B = `Set 2`), digits = 2) +   coord_fixed() +   theme_void()   # show elements instead of count/percentage ggplot(d) +   geom_venn(aes(A = `Set 1`, B = `Set 2`, C = `Set 3`, D = `Set 4`, label = value)) +   coord_fixed() +   theme_void()"},{"path":"https://yanlinlin82.github.io/ggvenn/reference/get_venn_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Venn diagram data table from ggvenn plot — get_venn_table","title":"Extract Venn diagram data table from ggvenn plot — get_venn_table","text":"Extract Venn diagram data table ggvenn plot","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/get_venn_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Venn diagram data table from ggvenn plot — get_venn_table","text":"","code":"get_venn_table(g)"},{"path":"https://yanlinlin82.github.io/ggvenn/reference/get_venn_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Venn diagram data table from ggvenn plot — get_venn_table","text":"g ggplot object created ggvenn()","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/get_venn_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Venn diagram data table from ggvenn plot — get_venn_table","text":"data frame containing Venn diagram intersection data","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/get_venn_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Venn diagram data table from ggvenn plot — get_venn_table","text":"","code":"library(ggvenn) g <- ggvenn(list(A = 1:5, B = 4:9, C = c(2:3, 8:12), D = c(1, 5, 9))) get_venn_table(g) #>        A     B     C     D name n     values #> 1   TRUE  TRUE  TRUE  TRUE ABCD 0            #> 2  FALSE  TRUE  TRUE  TRUE  BCD 1          9 #> 3   TRUE FALSE  TRUE  TRUE  ACD 0            #> 4  FALSE FALSE  TRUE  TRUE   CD 0            #> 5   TRUE  TRUE FALSE  TRUE  ABD 1          5 #> 6  FALSE  TRUE FALSE  TRUE   BD 0            #> 7   TRUE FALSE FALSE  TRUE   AD 1          1 #> 8  FALSE FALSE FALSE  TRUE    D 0            #> 9   TRUE  TRUE  TRUE FALSE  ABC 0            #> 10 FALSE  TRUE  TRUE FALSE   BC 1          8 #> 11  TRUE FALSE  TRUE FALSE   AC 2       2, 3 #> 12 FALSE FALSE  TRUE FALSE    C 3 10, 11, 12 #> 13  TRUE  TRUE FALSE FALSE   AB 1          4 #> 14 FALSE  TRUE FALSE FALSE    B 2       6, 7 #> 15  TRUE FALSE FALSE FALSE    A 0            #> 16 FALSE FALSE FALSE FALSE    - 0"},{"path":"https://yanlinlin82.github.io/ggvenn/reference/ggvenn-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggvenn: Draw Venn Diagram by 'ggplot2' — ggvenn-package","title":"ggvenn: Draw Venn Diagram by 'ggplot2' — ggvenn-package","text":"easy--use way draw pretty Venn diagrams using 'ggplot2'. package provides functions create Venn diagrams customizable colors, labels, styling options.","code":""},{"path":[]},{"path":"https://yanlinlin82.github.io/ggvenn/reference/ggvenn-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggvenn: Draw Venn Diagram by 'ggplot2' — ggvenn-package","text":"Maintainer: Linlin Yan yanlinlin82@gmail.com (ORCID)","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/ggvenn.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot venn diagram as an independent function. It supports both data frame and list as input. — ggvenn","title":"Plot venn diagram as an independent function. It supports both data frame and list as input. — ggvenn","text":"Plot venn diagram independent function. supports data frame list input.","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/ggvenn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot venn diagram as an independent function. It supports both data frame and list as input. — ggvenn","text":"","code":"ggvenn(   data,   columns = NULL,   element_column = NULL,   show_elements = FALSE,   show_set_totals = \"none\",   show_stats = c(\"cp\", \"c\", \"p\"),   show_counts = TRUE,   show_percentage = TRUE,   digits = 1,   label_sep = \",\",   count_column = NULL,   show_outside = c(\"auto\", \"none\", \"always\"),   auto_scale = FALSE,   fill_color = default_color_list,   fill_alpha = 0.5,   stroke_color = \"black\",   stroke_alpha = 1,   stroke_size = 1,   stroke_linetype = \"solid\",   set_name_color = \"black\",   set_name_size = 6,   text_color = \"black\",   text_size = 4,   comma_sep = FALSE,   padding = 1,   max_elements = 6,   text_truncate = TRUE )"},{"path":"https://yanlinlin82.github.io/ggvenn/reference/ggvenn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot venn diagram as an independent function. It supports both data frame and list as input. — ggvenn","text":"data data.frame list input data. columns character vector use index select columns/elements. element_column single character value use column name select elements. allowed data data.frame. show_elements Show set elements instead count/percentage. show_set_totals Show total count (c) /percentage (p) set. Pass string like \"cp\" show . string like \"none\" hide . show_stats Show count (c) /percentage (p) set. Pass string like \"cp\" show . string like \"none\" hide . show_counts Show count set. show_percentage Show percentage set. digits desired number digits decimal point. label_sep Separator character displaying elements. count_column Specify column element repeat count. show_outside Show outside elements (belongs set). Options: \"auto\", \"none\", \"always\". auto_scale Allow automatically resizing circles according element counts (2-set diagrams). fill_color Filling colors circles. Can single color vector colors set. fill_alpha Transparency filling circles. Can single value vector set. stroke_color Stroke color drawing circles. Can single color vector colors set. stroke_alpha Transparency drawing circles. Can single value vector set. stroke_size Stroke size drawing circles. Can single value vector set. stroke_linetype Line type drawing circles. Can single value vector set. set_name_color Text color set names. set_name_size Text size set names. text_color Text color intersect contents. text_size Text size intersect contents. comma_sep Whether use comma separator displaying numbers. padding Padding plot. Change allow longer labels displayed. max_elements Maximum number elements display show_elements=TRUE. text_truncate Whether truncate text elements exceed max_elements.","code":""},{"path":"https://yanlinlin82.github.io/ggvenn/reference/ggvenn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot venn diagram as an independent function. It supports both data frame and list as input. — ggvenn","text":"ggplot object print save file.","code":""},{"path":[]},{"path":"https://yanlinlin82.github.io/ggvenn/reference/ggvenn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot venn diagram as an independent function. It supports both data frame and list as input. — ggvenn","text":"","code":"library(ggvenn)  # use list as input a <- list(A = 1:5, B = 4:9, C = c(2:3, 8:12), D = c(1, 5, 9)) ggvenn(a, c(\"A\", \"B\"))  ggvenn(a, c(\"A\", \"B\", \"C\"))  ggvenn(a)   # use data.frame as input d <- dplyr::tibble(value   = c(1,     2,     3,     5,     6,     7,     8,     9),             `Set 1` = c(TRUE,  FALSE, TRUE,  TRUE,  FALSE, TRUE,  FALSE, TRUE),             `Set 2` = c(TRUE,  FALSE, FALSE, TRUE,  FALSE, FALSE, FALSE, TRUE),             `Set 3` = c(TRUE,  TRUE,  FALSE, FALSE, FALSE, FALSE, TRUE,  TRUE),             `Set 4` = c(FALSE, FALSE, FALSE, FALSE, TRUE,  TRUE,  FALSE, FALSE)) ggvenn(d, c(\"Set 1\", \"Set 2\"))  ggvenn(d, c(\"Set 1\", \"Set 2\", \"Set 3\"))  ggvenn(d)   # set fill color ggvenn(d, c(\"Set 1\", \"Set 2\"), fill_color = c(\"red\", \"blue\"))   # hide percentage ggvenn(d, c(\"Set 1\", \"Set 2\"), show_stats = \"c\")   # change precision of percentages ggvenn(d, c(\"Set 1\", \"Set 2\"), digits = 2)   # show elements instead of count/percentage ggvenn(a, show_elements = TRUE)  ggvenn(d, show_elements = TRUE, element_column = \"value\")"}]
